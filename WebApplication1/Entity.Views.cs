//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsDA0B19CFC2F3BAE61B5C0AC5ECE5365A2896049EB146336660700891FA0737FF))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// Тип содержит представления для наборов EntitySets и AssociationSets, созданные во время разработки.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsDA0B19CFC2F3BAE61B5C0AC5ECE5365A2896049EB146336660700891FA0737FF : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// Конструктор хранит представления для экстентов и значения хэша, созданные на основе замыканий и представлений метаданных и сопоставлений.
        /// </Summary>
        public ViewsForBaseEntitySetsDA0B19CFC2F3BAE61B5C0AC5ECE5365A2896049EB146336660700891FA0737FF()
        {
            this.EdmEntityContainerName = "EntityContext";
            this.StoreEntityContainerName = "EntityStoreContainer";
            this.HashOverMappingClosure = "632b945475144f563ee5c0e2c566bdcfd0e6533a963c22d4c32447f860b4bd4a";
            this.HashOverAllExtentViews = "20da76dfa20965b8dca21fa8164633a82ae0a20fcc08bdfb8c5d70a4ab0378b7";
            this.ViewCount = 26;
        }
        
        /// <Summary>
        /// Метод возвращает представление для указанного индекса.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.AdditionProductsForProduct
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.AdditionProductsForProduct", @"
    SELECT VALUE -- Constructing AdditionProductsForProduct
        [Entity.Store.AdditionProductsForProduct](T1.AdditionProductsForProduct_ProductId, T1.AdditionProductsForProduct_ProductAdditionId)
    FROM (
        SELECT 
            T.ProductId AS AdditionProductsForProduct_ProductId, 
            T.ProductAdditionId AS AdditionProductsForProduct_ProductAdditionId, 
            True AS _from0
        FROM EntityContext.AdditionProductsForProducts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.Category
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.Category", @"
    SELECT VALUE -- Constructing Category
        [Entity.Store.Category](T1.Category_CategoryId, T1.Category_NameRus, T1.Category_NameUkr)
    FROM (
        SELECT 
            T.CategoryId AS Category_CategoryId, 
            T.NameRus AS Category_NameRus, 
            T.NameUkr AS Category_NameUkr, 
            True AS _from0
        FROM EntityContext.Categories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.Ingridients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.Ingridients", @"
    SELECT VALUE -- Constructing Ingridients
        [Entity.Store.Ingridients](T1.Ingridients_IngridientId, T1.Ingridients_NameRus, T1.Ingridients_NameUkr)
    FROM (
        SELECT 
            T.IngridientId AS Ingridients_IngridientId, 
            T.NameRus AS Ingridients_NameRus, 
            T.NameUkr AS Ingridients_NameUkr, 
            True AS _from0
        FROM EntityContext.Ingridients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.OrderDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.OrderDetails", @"
    SELECT VALUE -- Constructing OrderDetails
        [Entity.Store.OrderDetails](T1.OrderDetails_OrderDetailsId, T1.OrderDetails_ProductId, T1.OrderDetails_Count, T1.OrderDetails_Price)
    FROM (
        SELECT 
            T.OrderDetailsId AS OrderDetails_OrderDetailsId, 
            T.ProductId AS OrderDetails_ProductId, 
            T.Count AS OrderDetails_Count, 
            T.Price AS OrderDetails_Price, 
            True AS _from0
        FROM EntityContext.OrderDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.Orders", @"
    SELECT VALUE -- Constructing Orders
        [Entity.Store.Orders](T1.Orders_OrderId, T1.Orders_Name, T1.Orders_PhoneNumber, T1.Orders_Email, T1.Orders_Street, T1.Orders_House, T1.Orders_Room, T1.Orders_StatusId)
    FROM (
        SELECT 
            T.OrderId AS Orders_OrderId, 
            T.Name AS Orders_Name, 
            T.PhoneNumber AS Orders_PhoneNumber, 
            T.Email AS Orders_Email, 
            T.Street AS Orders_Street, 
            T.House AS Orders_House, 
            T.Room AS Orders_Room, 
            T.StatusId AS Orders_StatusId, 
            True AS _from0
        FROM EntityContext.Orders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.OrderStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.OrderStatus", @"
    SELECT VALUE -- Constructing OrderStatus
        [Entity.Store.OrderStatus](T1.OrderStatus_StatusId, T1.OrderStatus_StatusNameRus, T1.OrderStatus_StatusNameUkr)
    FROM (
        SELECT 
            T.StatusId AS OrderStatus_StatusId, 
            T.StatusNameRus AS OrderStatus_StatusNameRus, 
            T.StatusNameUkr AS OrderStatus_StatusNameUkr, 
            True AS _from0
        FROM EntityContext.OrderStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.OrdersTimeChanged
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.OrdersTimeChanged", @"
    SELECT VALUE -- Constructing OrdersTimeChanged
        [Entity.Store.OrdersTimeChanged](T1.OrdersTimeChanged_OrderId, T1.OrdersTimeChanged_OrderStatus, T1.OrdersTimeChanged_Time)
    FROM (
        SELECT 
            T.OrderId AS OrdersTimeChanged_OrderId, 
            T.OrderStatus AS OrdersTimeChanged_OrderStatus, 
            T.Time AS OrdersTimeChanged_Time, 
            True AS _from0
        FROM EntityContext.OrdersTimeChangeds AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.Product
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.Product", @"
    SELECT VALUE -- Constructing Product
        [Entity.Store.Product](T1.Product_ProductId, T1.Product_CategoryId, T1.Product_NameRus, T1.Product_NameUkr, T1.Product_NumberOfOrders, T1.Product_Count, T1.Product_Energy, T1.Product_Balance, T1.Product_Price, T1.Product_Sale, T1.Product_AddDate)
    FROM (
        SELECT 
            T.ProductId AS Product_ProductId, 
            T.CategoryId AS Product_CategoryId, 
            T.NameRus AS Product_NameRus, 
            T.NameUkr AS Product_NameUkr, 
            T.NumberOfOrders AS Product_NumberOfOrders, 
            T.Count AS Product_Count, 
            T.Energy AS Product_Energy, 
            T.Balance AS Product_Balance, 
            T.Price AS Product_Price, 
            T.Sale AS Product_Sale, 
            T.AddDate AS Product_AddDate, 
            True AS _from0
        FROM EntityContext.Products AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.ProductWeightDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.ProductWeightDetails", @"
    SELECT VALUE -- Constructing ProductWeightDetails
        [Entity.Store.ProductWeightDetails](T1.ProductWeightDetails_ProductId, T1.ProductWeightDetails_Name, T1.ProductWeightDetails_Value)
    FROM (
        SELECT 
            T.ProductId AS ProductWeightDetails_ProductId, 
            T.Name AS ProductWeightDetails_Name, 
            T.[Value] AS ProductWeightDetails_Value, 
            True AS _from0
        FROM EntityContext.ProductWeightDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.ProductIngridients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.ProductIngridients", @"
    SELECT VALUE -- Constructing ProductIngridients
        [Entity.Store.ProductIngridients](T1.ProductIngridients_ProductId, T1.ProductIngridients_IngridientsId)
    FROM (
        SELECT 
            Key(T.Product).ProductId AS ProductIngridients_ProductId, 
            Key(T.Ingridients).IngridientId AS ProductIngridients_IngridientsId, 
            True AS _from0
        FROM EntityContext.ProductIngridients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.AdditionProductsForProducts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.AdditionProductsForProducts", @"
    SELECT VALUE -- Constructing AdditionProductsForProducts
        [Entity.AdditionProductsForProduct](T1.AdditionProductsForProduct_ProductId, T1.AdditionProductsForProduct_ProductAdditionId)
    FROM (
        SELECT 
            T.ProductId AS AdditionProductsForProduct_ProductId, 
            T.ProductAdditionId AS AdditionProductsForProduct_ProductAdditionId, 
            True AS _from0
        FROM EntityStoreContainer.AdditionProductsForProduct AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.Categories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.Categories", @"
    SELECT VALUE -- Constructing Categories
        [Entity.Category](T1.Category_CategoryId, T1.Category_NameRus, T1.Category_NameUkr)
    FROM (
        SELECT 
            T.CategoryId AS Category_CategoryId, 
            T.NameRus AS Category_NameRus, 
            T.NameUkr AS Category_NameUkr, 
            True AS _from0
        FROM EntityStoreContainer.Category AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.Ingridients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.Ingridients", @"
    SELECT VALUE -- Constructing Ingridients
        [Entity.Ingridient](T1.Ingridient_IngridientId, T1.Ingridient_NameRus, T1.Ingridient_NameUkr)
    FROM (
        SELECT 
            T.IngridientId AS Ingridient_IngridientId, 
            T.NameRus AS Ingridient_NameRus, 
            T.NameUkr AS Ingridient_NameUkr, 
            True AS _from0
        FROM EntityStoreContainer.Ingridients AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.OrderDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.OrderDetails", @"
    SELECT VALUE -- Constructing OrderDetails
        [Entity.OrderDetail](T1.OrderDetail_OrderDetailsId, T1.OrderDetail_ProductId, T1.OrderDetail_Count, T1.OrderDetail_Price)
    FROM (
        SELECT 
            T.OrderDetailsId AS OrderDetail_OrderDetailsId, 
            T.ProductId AS OrderDetail_ProductId, 
            T.Count AS OrderDetail_Count, 
            T.Price AS OrderDetail_Price, 
            True AS _from0
        FROM EntityStoreContainer.OrderDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.Orders
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.Orders", @"
    SELECT VALUE -- Constructing Orders
        [Entity.Order](T1.Order_OrderId, T1.Order_Name, T1.Order_PhoneNumber, T1.Order_Email, T1.Order_Street, T1.Order_House, T1.Order_Room, T1.Order_StatusId)
    FROM (
        SELECT 
            T.OrderId AS Order_OrderId, 
            T.Name AS Order_Name, 
            T.PhoneNumber AS Order_PhoneNumber, 
            T.Email AS Order_Email, 
            T.Street AS Order_Street, 
            T.House AS Order_House, 
            T.Room AS Order_Room, 
            T.StatusId AS Order_StatusId, 
            True AS _from0
        FROM EntityStoreContainer.Orders AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.OrderStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.OrderStatus", @"
    SELECT VALUE -- Constructing OrderStatus
        [Entity.OrderStatu](T1.OrderStatu_StatusId, T1.OrderStatu_StatusNameRus, T1.OrderStatu_StatusNameUkr)
    FROM (
        SELECT 
            T.StatusId AS OrderStatu_StatusId, 
            T.StatusNameRus AS OrderStatu_StatusNameRus, 
            T.StatusNameUkr AS OrderStatu_StatusNameUkr, 
            True AS _from0
        FROM EntityStoreContainer.OrderStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.OrdersTimeChangeds
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.OrdersTimeChangeds", @"
    SELECT VALUE -- Constructing OrdersTimeChangeds
        [Entity.OrdersTimeChanged](T1.OrdersTimeChanged_OrderId, T1.OrdersTimeChanged_OrderStatus, T1.OrdersTimeChanged_Time)
    FROM (
        SELECT 
            T.OrderId AS OrdersTimeChanged_OrderId, 
            T.OrderStatus AS OrdersTimeChanged_OrderStatus, 
            T.Time AS OrdersTimeChanged_Time, 
            True AS _from0
        FROM EntityStoreContainer.OrdersTimeChanged AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.Products", @"
    SELECT VALUE -- Constructing Products
        [Entity.Product](T1.Product_ProductId, T1.Product_CategoryId, T1.Product_NameRus, T1.Product_NameUkr, T1.Product_NumberOfOrders, T1.Product_Count, T1.Product_Energy, T1.Product_Balance, T1.Product_Price, T1.Product_Sale, T1.Product_AddDate)
    FROM (
        SELECT 
            T.ProductId AS Product_ProductId, 
            T.CategoryId AS Product_CategoryId, 
            T.NameRus AS Product_NameRus, 
            T.NameUkr AS Product_NameUkr, 
            T.NumberOfOrders AS Product_NumberOfOrders, 
            T.Count AS Product_Count, 
            T.Energy AS Product_Energy, 
            T.Balance AS Product_Balance, 
            T.Price AS Product_Price, 
            T.Sale AS Product_Sale, 
            T.AddDate AS Product_AddDate, 
            True AS _from0
        FROM EntityStoreContainer.Product AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.ProductWeightDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.ProductWeightDetails", @"
    SELECT VALUE -- Constructing ProductWeightDetails
        [Entity.ProductWeightDetail](T1.ProductWeightDetail_ProductId, T1.ProductWeightDetail_Name, T1.ProductWeightDetail_Value)
    FROM (
        SELECT 
            T.ProductId AS ProductWeightDetail_ProductId, 
            T.Name AS ProductWeightDetail_Name, 
            T.[Value] AS ProductWeightDetail_Value, 
            True AS _from0
        FROM EntityStoreContainer.ProductWeightDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.ProductIngridients
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.ProductIngridients", @"
    SELECT VALUE -- Constructing ProductIngridients
        [Entity.ProductIngridients](T3.ProductIngridients_Ingridients, T3.ProductIngridients_Product)
    FROM (
        SELECT -- Constructing Ingridients
            CreateRef(EntityContext.Ingridients, row(T2.ProductIngridients_Ingridients_IngridientId), [Entity.Ingridient]) AS ProductIngridients_Ingridients, 
            T2.ProductIngridients_Product
        FROM (
            SELECT -- Constructing Product
                T1.ProductIngridients_Ingridients_IngridientId, 
                CreateRef(EntityContext.Products, row(T1.ProductIngridients_Product_ProductId), [Entity.Product]) AS ProductIngridients_Product
            FROM (
                SELECT 
                    T.IngridientsId AS ProductIngridients_Ingridients_IngridientId, 
                    T.ProductId AS ProductIngridients_Product_ProductId, 
                    True AS _from0
                FROM EntityStoreContainer.ProductIngridients AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.Administrator
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.Administrator", @"
    SELECT VALUE -- Constructing Administrator
        [Entity.Store.Administrator](T1.Administrator_Login, T1.Administrator_Password)
    FROM (
        SELECT 
            T.Login AS Administrator_Login, 
            T.Password AS Administrator_Password, 
            True AS _from0
        FROM EntityContext.Administrators AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.Administrators
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.Administrators", @"
    SELECT VALUE -- Constructing Administrators
        [Entity.Administrator](T1.Administrator_Login, T1.Administrator_Password)
    FROM (
        SELECT 
            T.Login AS Administrator_Login, 
            T.Password AS Administrator_Password, 
            True AS _from0
        FROM EntityStoreContainer.Administrator AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.Messages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.Messages", @"
    SELECT VALUE -- Constructing Messages
        [Entity.Store.Messages](T1.Messages_MessagesId, T1.Messages_Name, T1.Messages_Email, T1.Messages_Message)
    FROM (
        SELECT 
            T.MessagesId AS Messages_MessagesId, 
            T.Name AS Messages_Name, 
            T.Email AS Messages_Email, 
            T.Message1 AS Messages_Message, 
            True AS _from0
        FROM EntityContext.Messages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.Messages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.Messages", @"
    SELECT VALUE -- Constructing Messages
        [Entity.Message](T1.Message_MessagesId, T1.Message_Name, T1.Message_Email, T1.Message_Message1)
    FROM (
        SELECT 
            T.MessagesId AS Message_MessagesId, 
            T.Name AS Message_Name, 
            T.Email AS Message_Email, 
            T.Message AS Message_Message1, 
            True AS _from0
        FROM EntityStoreContainer.Messages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityStoreContainer.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityStoreContainer.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [Entity.Store.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM EntityContext.sysdiagrams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// возвратить представление для EntityContext.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("EntityContext.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [Entity.sysdiagram](T1.sysdiagram_name, T1.[sysdiagram.principal_id], T1.[sysdiagram.diagram_id], T1.sysdiagram_version, T1.sysdiagram_definition)
    FROM (
        SELECT 
            T.name AS sysdiagram_name, 
            T.principal_id AS [sysdiagram.principal_id], 
            T.diagram_id AS [sysdiagram.diagram_id], 
            T.version AS sysdiagram_version, 
            T.definition AS sysdiagram_definition, 
            True AS _from0
        FROM EntityStoreContainer.sysdiagrams AS T
    ) AS T1");
        }
    }
}
